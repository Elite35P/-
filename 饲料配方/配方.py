import numpy as np
from scipy.optimize import linprog

price_dict = {
    # 0–2月龄
    '全脂牛奶':    4.50,   # Estimated liquid milk
    '代乳粉':      12.00,  # Market milk powder approximately 12元/kg
    '乳清粉':      8.65,   # Average price of whey powder
    '优质干草':    3.00,   # Keep original value

    # 通用及已列主料
    '苜蓿':        3.75,
    '进口燕麦':    4.20,
    '压片玉米':    2.185,  # Converted from 2185元/ton to元/kg
    '燕麦片':      4.20,   # Same price as imported oats
    '豆粕':        3.32,   # Converted from 3320元/ton to元/kg
    '燕麦草':      3.48,
    '小麦草':      0.553,  # Converted from 553.38元/ton to元/kg
    '小麦麸皮':    2.45,   # Converted from 2436.71元/ton to元/kg
    '玉米青贮':    1.00,   # Converted from 1000元/ton to元/kg
    '玉米':        2.185,  # Converted from 2185元/ton to元/kg

    # 3–6月龄专用
    '豆粕(3–6)':  3.95,
    '菜粕':        2.56,   # Converted from 2562.85元/ton to元/kg
    '糖蜜':        1.32,
    '甜菜颗粒':    2.15,   # Converted from 2150元/ton to元/kg
    '预混料':      14.40,
    '盐砖':        0.55,

    # 7–13月龄
    '全株玉米青贮':1.20,
    '羊草':        0.90,   # Converted from 900元/ton to元/kg
    '大麦':        2.45,   # Same price as wheat
    '棉籽粕':      2.685,  # Converted from 2685元/ton to元/kg
    'DDGS':        2.25,   # Converted from 2251元/ton to元/kg
    '苹果粕':      1.65,
    '啤酒糟':      2.20,
    '小苏打':      3.00,
    '氧化镁':      1.75,   # Converted from 1750元/ton to元/kg

    # 14–23月龄
    '苜蓿青贮':    1.20,
    '稻草':        0.54,   # Converted from 537.3元/ton to元/kg
    '蒸汽压片高粱':2.45,   # Same price as fine feed level
    '甘薯渣':      1.23,   # Converted from 1231.15元/ton to元/kg
    '葵花粕':      2.00,   # Converted from 2000元/ton to元/kg
    '玉米蛋白粉':  3.75,   # Converted from 3754.73元/ton to元/kg
    '大豆皮':      3.00,   # Converted from 3000元/ton to元/kg
    'β-胡萝卜素': 96.00,
    '胆碱':        24.00,

    # 过瘤胃脂肪粉
    '过瘤胃脂肪粉':20.00,

    # 其它补充
    '燕麦青干草':  3.00,
    '小麦':        2.45,
    '玉米秸秆':    1.00,
    '木薯渣':      1.16,   # Converted from 163.99元/ton to元/kg
    '阴离子盐预混料':1.50,
    '苜蓿草':    1.50,

    # Missing Ingredients
    '棕榈油':      7.89063,  # Converted from 7890.63元/ton to元/kg
    '胡萝卜素':    0.205,    # From 205元/kg
    '甘蔗糖蜜':    2.10,     # Converted from 2100元/ton to元/kg
    '玉米秸秆':    0.607,    # Converted from 606.99元/ton to元/kg
    '98.5%赖氨酸': 8.45,
    '70%赖氨酸':   5.50,
    '固态蛋氨酸':  22.00,
    '苏氨酸':      9.95,
    '色氨酸':      46.00,
    '缬氨酸':      13.85,
    '50%VA':       78.00,    # Range 78-85元/kg
    'VB1':         232.00,   # Range 232-240元/kg
    '80%VB2':      82.00,    # Range 82-86元/kg
    'VB6':         182.00,   # Range 182-188元/kg
    'VB12':        95.00,    # Range 95-100元/kg
    'VK3':         88.00,    # Range 88-92元/kg
    'D3':          225.00,   # Range 225-245元/kg
    '烟酰胺':      38.00,    # Range 38-42元/kg
    '2%生物素':    34.00,    # Range 34-36元/kg
    '泛酸钙':      53.00,    # Range 53-55元/kg
    'VC原粉':      22.00,    # Range 22-24元/kg
    '叶酸':        330.00,   # Range 330-350元/kg
    '50%胆碱':     3.60,     # Range 3.6-3.8元/kg
    '磷酸氢钙':    3.08,     # Range 3.08-3.3元/kg
}



# —— 构造原料列表与价格向量 ——
ingredients = list(price_dict.keys())
prices = np.array([price_dict[i] for i in ingredients])

# —— 2. 营养成分字典（[ME, CP, Starch, NDF, Feed_NDF]） ——
nutr_val = {
     '玉米': [13.8, 9.0, 63.0, 9.1, 9.1],
    '苜蓿草': [8.39, 19.06, 2.18, 41.93, 41.93],  # 更新自表中“进口苜蓿” (line 14)
    '木薯渣': [12.38, 2.5, 71.6, 8.4, 8.4],        # 表中无对应，保留原始值
    '阴离子盐预混料': [0.0, 0.0, 0.0, 0.0, 0.0],   # 表中无对应，保留原始值
    '玉米秸秆': [3.97, 5.52, 1.55, 71.83, 71.83],  # 更新自表中“玉米秸” (line 30)
    '小麦': [8.13, 14.11, 63.38, 11.05, 11.05],    # 更新自表中“小麦” (line 54)
    '全脂牛奶': [10.64, 24.0, 0.0, 0.0, 0.0],      # 表中无对应，保留原始值
    '代乳粉': [18.0, 26.0, 0.0, 0.0, 0.0],         # 表中无对应，保留原始值
    '乳清粉': [14.5, 12.0, 0.0, 0.0, 0.0],         # 表中无对应，保留原始值
    '优质干草': [7.5, 8.0, 3.0, 50.0, 50.0],       # 表中无明确对应，保留原始值
    '苜蓿': [7.8, 17.06, 2.03, 49.73, 49.73],      # 更新自表中“国产苜蓿”平均值 (lines 4-11)
    '进口燕麦': [8.0, 7.31, 2.49, 55.82, 55.82],   # 更新自表中“进口燕麦干草”平均值 (lines 27-28)
    '压片玉米': [8.49, 8.87, 66.53, 10.46, 10.46], # 更新自表中“压片玉米” (line 51)
    '燕麦片': [7.95, 13.0, 55.0, 20.0, 20.0],      # 表中无对应，保留原始值
    '豆粕': [7.89, 48.04, 4.77, 15.63, 15.63],     # 更新自表中“豆粕” (line 59)
    '燕麦草': [7.1, 8.54, 2.76, 58.8, 58.8],       # 更新自表中“燕麦干草”平均值 (lines 22-26)
    '小麦草': [7.0, 10.0, 4.0, 60.0, 60.0],        # 表中无对应，保留原始值
    '小麦麸皮': [7.1, 17.77, 15.0, 40.41, 40.41],  # 更新自表中“小麦麸” (line 57)
    '玉米青贮': [6.7, 8.66, 23.9, 51.18, 51.18],   # 更新自表中“全株玉米青贮”平均值 (lines 50-55)
    '豆粕(3–6)': [7.85, 48.04, 4.77, 15.63, 15.63],# 视为与“豆粕”相同，更新自 (line 59)
    '菜粕': [8.25, 39.7, 5.1, 34.99, 34.99],       # 更新自表中“菜粕”平均值 (lines 69,70,72)
    '糖蜜': [9.9, 5.465, 0.0, 0.19, 0.19],         # 更新自表中“甜菜糖蜜”和“甘蔗糖蜜”平均值 (lines 47-48)
    '甜菜颗粒': [8.5, 10.48, 2.3, 52.81, 52.81],   # 更新自表中“甜菜粕” (line 45)
    '钙磷预混料': [0.0, 0.0, 0.0, 0.0, 0.0],       # 表中无对应，保留原始值
    '盐砖': [0.0, 0.0, 0.0, 0.0, 0.0],            # 表中无对应，保留原始值
    '全株玉米青贮': [6.85, 8.66, 23.9, 51.18, 51.18], # 更新自表中“全株玉米青贮”平均值 (lines 50-55)
    '羊草': [7.2, 7.31, 2.22, 69.5, 69.5],         # 更新自表中“羊草”平均值 (lines 16-21)
    '大麦': [8.2, 11.91, 46.71, 18.22, 18.22],     # 更新自表中“大麦” (line 53)
    '棉籽粕': [7.6, 40.93, 5.51, 39.53, 39.53],    # 更新自表中“棉籽粕” (line 67)
    'DDGS': [8.0, 29.29, 4.51, 38.38, 38.38],     # 更新自表中“DDGS”平均值 (lines 76-79)
    '苹果粕': [7.0, 7.69, 6.78, 46.91, 46.91],     # 更新自表中“苹果粕” (line 44)
    '啤酒糟': [7.1, 26.81, 1.16, 60.3, 60.3],      # 更新自表中“干啤酒糟”和“湿啤酒糟”平均值 (lines 80-81)
    '小苏打': [0.0, 0.0, 0.0, 0.0, 0.0],          # 表中无对应，保留原始值
    '氧化镁': [0.0, 0.0, 0.0, 0.0, 0.0],          # 表中无对应，保留原始值
    '苜蓿青贮': [7.6, 18.16, 5.28, 42.9, 42.9],    # 更新自表中“苜蓿青贮” (line 65)
    '稻草': [3.5, 4.39, 2.15, 69.25, 69.25],       # 更新自表中“水稻秸”平均值 (lines 31-34)
    '蒸汽压片高粱': [8.15, 10.0, 60.0, 15.0, 15.0],# 表中无对应，保留原始值
    '甘薯渣': [10.5, 2.0, 80.0, 5.0, 5.0],         # 表中无对应，保留原始值
    '葵花粕': [7.8, 35.99, 3.91, 41.5, 41.5],      # 更新自表中“向日葵粕” (line 73)
    '玉米蛋白粉': [8.5, 63.3, 10.0, 8.7, 8.7],     # 更新自表中“玉米蛋白粉” (line 75)
    '大豆皮': [6.9, 11.5, 2.99, 62.59, 62.59],     # 更新自表中“大豆皮” (line 42)
    'β-胡萝卜素': [0.0, 0.0, 0.0, 0.0, 0.0],       # 表中无对应，保留原始值
    '胆碱': [0.0, 0.0, 0.0, 0.0, 0.0],            # 表中无对应，保留原始值
    '预混料': [0.0, 0.0, 0.0, 0.0, 0.0],          # 表中无对应，保留原始值
    '燕麦青干草': [7.3, 14.0, 2.0, 52.0, 52.0],    # 表中无明确对应，保留原始值
    '过瘤胃脂肪粉': [0.0, 0.0, 0.0, 0.0, 0.0],     # 表中无对应，保留原始值
}



# —— 构造营养矩阵 nut_mat ——
ingredients = list(nutr_val.keys())
nut_mat = np.vstack([nutr_val[i] for i in ingredients]).T
nut_idx = {'ME':0,'CP':1,'Starch':2,'NDF':3,'Feed_NDF':4}

# —— 阶段原料池与需求约束 ——
# —— 阶段原料池与需求约束（已对照经典配方修正，并增加围产期前后） ——
stage_ingredients = {
    # 生长阶段
    '0-2月龄':    [
        '全脂牛奶', '代乳粉', '乳清粉', '压片玉米', '燕麦片',
        '豆粕', '苜蓿', '燕麦草', '优质干草', '预混料'
    ],
    '3-6月龄':    [
        '玉米青贮', '燕麦青干草', '压片玉米', '小麦麸皮',
        '豆粕(3–6)', '菜粕', '糖蜜', '甜菜颗粒', '预混料'
    ],
    '7-13月龄':   [
        '全株玉米青贮', '羊草', '压片玉米', '大麦',
        '棉籽粕', 'DDGS', '苹果粕', '啤酒糟',
        '小苏打', '苜蓿草', '燕麦草'
    ],
    '14-23月龄':  [
        '苜蓿青贮', '稻草', '蒸汽压片高粱', '甘薯渣',
        '葵花粕', '玉米蛋白粉', '大豆皮', '预混料',
        '豆粕'
    ],

    # 围产期细分
    '围产产前21天': [
        '苜蓿青贮', '羊草', '压片玉米', '甜菜颗粒',
        '豆粕', '小苏打', '预混料'
    ],
    '围产产后21天': [
        '玉米青贮', '压片玉米', '豆粕', '过瘤胃脂肪粉',
        '预混料', '酒糟', '苜蓿', '糖蜜', '甜菜颗粒'
    ],

    # 泌乳期
    '泌乳早期':   [
        '玉米青贮', '蒸汽压片高粱', '豆粕', '棉籽粕',
        '糖蜜', '苜蓿', '过瘤胃脂肪粉', '预混料'
    ],
    '泌乳中期':   [
        '玉米青贮', '小麦麸皮', 'DDGS', '菜粕',
        '甜菜颗粒', '苹果粕', '预混料'
    ],
    '泌乳后期':   [
        '玉米秸秆', '小麦麸皮', '葵花粕',
        '木薯渣', '预混料'
    ],

    # 干奶期
    '干奶前期':   [
        '苜蓿草', '玉米青贮', '小麦麸皮',
        '预混料', 'DDGS', '大麦', '豆粕',
        '棉籽粕', '燕麦草', '菜粕'
    ],
    '干奶后期':   [
        '玉米青贮', '燕麦草', '大麦',
        '阴离子盐预混料', 'DDGS', '豆粕',
        '棉籽粕', '玉米'
    ],
}


# —— 调整后的营养需求约束 ——
#   • 适当下调 ME 下限，放宽高纤维阶段的 NDF 上限
#   • 保持 CP、Starch、Feed_NDF 区间基本不变
stages_req = {
    '0-2月龄': {
        'ME':      (4.05,  5.66),
        'CP':      (18.4,    25.6),
        'Starch':  (18,    43.70),
        'NDF':     (14.35, 15),
        'Feed_NDF':(14.35, 15),
    },
    '3-6月龄': {
        'ME':      (4.394,  12.743),
        'CP':      (14.9,  19.3),
        'Starch':  (12,    35.28),
        'NDF':     (22,    37),
        'Feed_NDF':(17,    29),
    },
    '7-13月龄': {
        'ME':      (7.16,  7.16),
        'CP':      (11.44, 18),
        'Starch':  (8,     32.16),
        'NDF':     (23,    38),
        'Feed_NDF':(17,    37.37),
    },
    '14-23月龄': {
        'ME':      (7.00,  7.51),
        'CP':      (13,    17),
        'Starch':  (6,     12.18),
        'NDF':     (23,    38.25),
        'Feed_NDF':(17,    38.25),
    },
    '干奶后期': {
        'ME':      (6.30,  6.30),
        'CP':      (8.85,  17),
        'Starch':  (8,     22.05),
        'NDF':     (22,    41.00),
        'Feed_NDF':(17,    41.00),
    },
    '干奶前期': {
        'ME':      (7.00,  7.83),
        'CP':      (14,    18),
        'Starch':  (10,    20),
        'NDF':     (20,    38.32),
        'Feed_NDF':(16,    38.32),
    },
    '泌乳早期': {
        'ME':      (7.03,  7.03),
        'CP':      (15.48, 22),
        'Starch':  (20,    34.51),
        'NDF':     (20,    36),
        'Feed_NDF':(15,    28),
    },
    '泌乳中期': {
        'ME':      (7.02,  7.02),
        'CP':      (13.00, 19),
        'Starch':  (10,    32.44),
        'NDF':     (22,    45),
        'Feed_NDF':(16,    45),
    },
    '泌乳后期': {
        'ME':      (5.00,  5.00),
        'CP':      (8.27,  16),
        'Starch':  (4.66,  20),
        'NDF':     (20,    62.75),
        'Feed_NDF':(15,    62.75),
    },
}





# —— 最大配比约束 ——
max_ingredient_pct = {
    '0-2月龄':    {'豆粕':0.30,     '压片玉米':0.55,    '预混料':0.05},
    '3-6月龄':    {'豆粕(3–6)':0.25,'压片玉米':0.35,    '钙磷预混料':0.03,'菜粕':0.15},
    '7-13月龄':   {'压片玉米':0.25, '棉籽粕':0.12,     'DDGS':0.15,    '小苏打':0.02},
    '14-23月龄':  {'玉米蛋白粉':0.10,'预混料':0.03,     '蒸汽压片高粱':0.15},

    # 围产前21天（沿用干奶后期原料池）
    '围产产前21天':{'玉米青贮':0.60,'燕麦草':0.40,      '大麦':0.20,    '阴离子盐预混料':0.10},

    # 围产后21天（沿用泌乳早期原料池，并放宽脂肪粉）
    '围产产后21天':{'玉米青贮':0.50,'蒸汽压片高粱':0.50,'豆粕':0.25,  '过瘤胃脂肪粉':0.10,'预混料':0.03},

    '泌乳早期':   {'玉米青贮':0.50,'蒸汽压片高粱':0.50,'豆粕':0.25,  '过瘤胃脂肪粉':0.10,'预混料':0.03},
    '泌乳中期':   {'玉米青贮':0.70,'小麦':0.30,        'DDGS':0.15,    '菜粕':0.10,      '预混料':0.03},
    '泌乳后期':   {'玉米秸秆':0.80,'小麦麸皮':0.20,    '葵花粕':0.15,  '木薯渣':0.10,    '预混料':0.03},

    '干奶前期':   {'苜蓿草':0.80,'玉米青贮':0.30,    '小麦麸皮':0.06,'预混料':0.02},
    '干奶后期':   {'玉米青贮':0.70,'燕麦草':0.40,      '大麦':0.20,    '阴离子盐预混料':0.10},
}

# —— 最小配比约束 ——
min_ingredient_pct = {
    '0-2月龄':    {'预混料':0.02},
    '3-6月龄':    {'钙磷预混料':0.005,'糖蜜':0.01},
    '7-13月龄':   {'小苏打':0.005},
    '14-23月龄':  {'预混料':0.005,'β-胡萝卜素':0.0005},

    '围产产前21天':{'阴离子盐预混料':0.05},
    '围产产后21天':{'过瘤胃脂肪粉':0.02,'预混料':0.02},

    '泌乳早期':   {'过瘤胃脂肪粉':0.03,'预混料':0.02},
    '泌乳中期':   {'预混料':0.02},
    '泌乳后期':   {'预混料':0.02},

    '干奶前期':   {'预混料':0.01},
    '干奶后期':   {'阴离子盐预混料':0.05},
}



optimization_results = {}

print("\n================ 饲料价格上涨情况下的优化配方 ================\n")
for stage, req in stages_req.items():
    print(f"\n===== {stage} 优化配方 =====")
    stage_ings = stage_ingredients[stage]
    idxs = [ingredients.index(i) for i in stage_ings]
    c = np.array([price_dict[i] for i in stage_ings])
    M = nut_mat[:, idxs]

    A_eq = [np.ones(len(idxs))]
    b_eq = [1.0]
    A_ub, b_ub = [], []

    for nut, (low, high) in req.items():
        row = M[nut_idx[nut]]
        if high is not None:
            A_ub.append(row); b_ub.append(high)
        if low is not None:
            A_ub.append(-row); b_ub.append(-low)

    for ing, mx in max_ingredient_pct.get(stage, {}).items():
        if ing in stage_ings:
            i = stage_ings.index(ing)
            row = np.zeros(len(idxs)); row[i] = 1
            A_ub.append(row); b_ub.append(mx)
    for ing, mn in min_ingredient_pct.get(stage, {}).items():
        if ing in stage_ings:
            i = stage_ings.index(ing)
            row = np.zeros(len(idxs)); row[i] = -1
            A_ub.append(row); b_ub.append(-mn)

    res = linprog(c, A_eq=np.array(A_eq), b_eq=np.array(b_eq),
                  A_ub=np.array(A_ub), b_ub=np.array(b_ub),
                  bounds=[(0,1)]*len(idxs), method='highs')

    optimization_results[stage] = res
    if res.success:
        print(f"成本 {res.fun:.2f} 元/kg DM")
        for ing, pct in sorted(zip(stage_ings, res.x), key=lambda x:-x[1]):
            if pct>1e-3: print(f"  {ing:8s}: {pct*100:6.2f}%")
        vals = M @ res.x
        print("营养价值:", {nut: vals[nut_idx[nut]] for nut in nut_idx})
    else:
        print("优化失败:", res.message)

# （后续可添加典型配方对比等）
# —— 对比典型配方 ——

print("\n\n================ 传统配方（价格上涨后）================\n")

# 典型配方定义
typical_formulations = {
    # —— 生长阶段，保持不变 ——
    '0-2月龄':    {'压片玉米':50,'豆粕':25,'燕麦片':15,'苜蓿':8,'预混料':2},
    '3-6月龄':    {'玉米青贮':35,'压片玉米':30,'豆粕':15,'小麦麸皮':10,'糖蜜':5,'预混料':5},
    '7-13月龄':   {'全株玉米青贮':65,'压片玉米':20,'棉籽粕':8,'DDGS':5,'小苏打':2},
    '14-23月龄':  {'苜蓿青贮':70,'蒸汽压片高粱':15,'葵花粕':8,'大豆皮':5,'预混料':2},

    # —— 泌乳、干奶阶段，按叙述修正 ——
    # 围产前21天（干奶后期）
    '干奶后期':  {'玉米青贮':50,'燕麦草':30,'大麦':10,'阴离子盐预混料':10},
    # 干奶前期（产前60-21天）
    '干奶前期':  {'苜蓿草':70,'玉米青贮':25,'小麦麸皮':4,'预混料':1},
    # 产后21天（泌乳早期第一子阶段，可合并到泌乳早期）
    '泌乳早期':  {'玉米青贮':35,'蒸汽压片高粱':40,'豆粕':18,'过瘤胃脂肪粉':4,'预混料':3},
    # 泌乳中期（产后101-200天）
    '泌乳中期':  {'玉米青贮':60,'小麦':20,'DDGS':10,'菜粕':7,'预混料':3},
    # 泌乳后期（产后201至干奶）
    '泌乳后期':  {'玉米秸秆':70,'小麦麸皮':15,'葵花粕':10,'木薯渣':3,'预混料':2},
}


# 计算并打印典型配方成本与营养价值
for stage, formulation in typical_formulations.items():
    print(f"\n===== {stage} 典型配方 =====")
    cost = sum(price_dict[ing] * (pct / 100) for ing, pct in formulation.items())
    print(f"成本: {cost:.2f} 元/kg DM")
    print("\n配方组成:")
    for ing, pct in formulation.items():
        print(f"  {ing:15s}: {pct:6.2f}%")
    nutrition = {nut: 0 for nut in nut_idx}
    for ing, pct in formulation.items():
        for nut, idx in nut_idx.items():
            nutrition[nut] += nutr_val[ing][idx] * (pct / 100)
    print("\n营养价值:")
    for nut, value in nutrition.items():
        print(f"  {nut:10s}: {value:6.2f}")

# —— 成本对比分析 ——

print("\n\n================ 成本对比分析 ================\n")
print("阶段\t\t优化配方成本\t典型配方成本\t节约百分比")
print("-------------------------------------------------------------")

for stage in stage_ingredients.keys():
    res = optimization_results.get(stage)
    if res and res.success:
        optimized_cost = res.fun
        typ = typical_formulations.get(stage, {})
        typical_cost = sum(price_dict[ing] * (pct / 100) for ing, pct in typ.items())
        saving_pct = (typical_cost - optimized_cost) / typical_cost * 100 if typical_cost else 0.0
        print(f"{stage:10s}\t{optimized_cost:6.2f} 元/kg\t{typical_cost:6.2f} 元/kg\t{saving_pct:6.2f}%")
    else:
        print(f"{stage:10s}\t优化失败\t\t\t")

print("\n\n================ 结束 ================\n")
